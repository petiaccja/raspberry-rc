
package rccontroller.desktop;

import rc.client.*;

/**
 * This frame contains controls for managing servo settings.
 */
public class SettingsFrame extends javax.swing.JFrame {
	private RcController mainFrame;
	RcClient client;
	
	private float epaThrottleMin;
	private float epaThrottleMax;
	private float epaSteeringMin;
	private float epaSteeringMax;
	
	private float timingThrottleMin;
	private float timingThrottleMax;
	private float timingSteeringMin;
	private float timingSteeringMax;
	
	/**
	 * Creates new form SettingsFrame.
	 */
	public SettingsFrame(RcController mainFrame) {
		this.mainFrame = mainFrame;
		client = mainFrame.getClient();
		
		
		epaThrottleMin = 0;
		epaThrottleMax = 100;
		epaSteeringMin = 0;
		epaSteeringMax = 100;

		timingThrottleMin = 1000;
		timingThrottleMax = 2000;
		timingSteeringMin = 1000;
		timingSteeringMax = 2000;
		
		// UI CODE HERE
		initComponents();
		// END UI CODE
	}
	
	/**
	 * Restores text field from saved settings.
	 * @param values Last saved settings.
	 */
	public void restoreValues(SaveSettings values) {
		epaThrottleMin = values.epaThrottleMin;
		epaThrottleMax = values.epaThrottleMax;
		epaSteeringMin = values.epaSteeringMin;
		epaSteeringMax = values.epaSteeringMax;

		timingThrottleMin = values.timingThrottleMin;
		timingThrottleMax = values.timingThrottleMax;
		timingSteeringMin = values.timingSteeringMin;
		timingSteeringMax = values.timingSteeringMax;
		
		tfEpaSteeringMin.setText(Float.toString(epaSteeringMin));
		tfEpaSteeringMax.setText(Float.toString(epaSteeringMax));
		tfEpaThrottleMin.setText(Float.toString(epaThrottleMin));
		tfEpaThrottleMax.setText(Float.toString(epaThrottleMax));
		
		tfTimingSteeringMin.setText(Float.toString(timingSteeringMin));
		tfTimingSteeringMax.setText(Float.toString(timingSteeringMax));
		tfTimingThrottleMin.setText(Float.toString(timingThrottleMin));
		tfTimingThrottleMax.setText(Float.toString(timingThrottleMax));
	}
	/**
	 * Return settings for saving.
	 * @return Current settings, unknown field uninitialized.
	 */
	public SaveSettings getValues() {
		SaveSettings ret = new SaveSettings();
			
		ret.epaThrottleMin = epaThrottleMin;
		ret.epaThrottleMax = epaThrottleMax;
		ret.epaSteeringMin = epaSteeringMin;
		ret.epaSteeringMax = epaSteeringMax;

		ret.timingThrottleMin = timingThrottleMin;
		ret.timingThrottleMax = timingThrottleMax;
		ret.timingSteeringMin = timingSteeringMin;
		ret.timingSteeringMax = timingSteeringMax;
		
		return ret;
	}
	
	/**
	 * Parses and validates a JTextField that should contain percent value.
	 */
	private float parsePercent(javax.swing.JTextField textField) {
		float ret;		
		String text = textField.getText();
		
		int idx = text.indexOf('%');
		if (idx > 0) {
			text = text.substring(0, idx);
		}

		ret = Float.parseFloat(text);
		ret = Math.max(0.0f, Math.min(100.0f, ret));
		textField.setText(Float.toString(ret) + "%");

		return ret;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        tfEpaThrottleMin = new javax.swing.JTextField();
        tfEpaThrottleMax = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfEpaSteeringMin = new javax.swing.JTextField();
        tfEpaSteeringMax = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tfTimingThrottleMin = new javax.swing.JTextField();
        tfTimingThrottleMax = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfTimingSteeringMin = new javax.swing.JTextField();
        tfTimingSteeringMax = new javax.swing.JTextField();

        setTitle("Settings");
        setMinimumSize(new java.awt.Dimension(156, 100));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("EPA:"));
        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 100));
        jPanel1.setMinimumSize(new java.awt.Dimension(166, 90));
        jPanel1.setPreferredSize(new java.awt.Dimension(400, 100));
        jPanel1.setLayout(new java.awt.GridLayout(2, 3));

        jLabel3.setText("Throttle:");
        jPanel1.add(jLabel3);

        tfEpaThrottleMin.setText("0%");
        tfEpaThrottleMin.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        tfEpaThrottleMin.setMinimumSize(new java.awt.Dimension(4, 25));
        tfEpaThrottleMin.setPreferredSize(new java.awt.Dimension(80, 25));
        tfEpaThrottleMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEpaThrottleMinActionPerformed(evt);
            }
        });
        jPanel1.add(tfEpaThrottleMin);

        tfEpaThrottleMax.setText("100%");
        tfEpaThrottleMax.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        tfEpaThrottleMax.setMinimumSize(new java.awt.Dimension(4, 25));
        tfEpaThrottleMax.setPreferredSize(new java.awt.Dimension(80, 25));
        tfEpaThrottleMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEpaThrottleMaxActionPerformed(evt);
            }
        });
        jPanel1.add(tfEpaThrottleMax);

        jLabel2.setText("Steering:");
        jPanel1.add(jLabel2);

        tfEpaSteeringMin.setText("0%");
        tfEpaSteeringMin.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        tfEpaSteeringMin.setMinimumSize(new java.awt.Dimension(4, 25));
        tfEpaSteeringMin.setPreferredSize(new java.awt.Dimension(80, 25));
        tfEpaSteeringMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEpaSteeringMinActionPerformed(evt);
            }
        });
        jPanel1.add(tfEpaSteeringMin);

        tfEpaSteeringMax.setText("100%");
        tfEpaSteeringMax.setMaximumSize(new java.awt.Dimension(2147483647, 80));
        tfEpaSteeringMax.setPreferredSize(new java.awt.Dimension(80, 25));
        tfEpaSteeringMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfEpaSteeringMaxActionPerformed(evt);
            }
        });
        jPanel1.add(tfEpaSteeringMax);

        getContentPane().add(jPanel1);

        jSeparator1.setMaximumSize(new java.awt.Dimension(32767, 10));
        jSeparator1.setPreferredSize(new java.awt.Dimension(10, 10));
        getContentPane().add(jSeparator1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Timing:"));
        jPanel2.setMaximumSize(new java.awt.Dimension(32767, 100));
        jPanel2.setMinimumSize(new java.awt.Dimension(166, 90));
        jPanel2.setPreferredSize(new java.awt.Dimension(400, 100));
        jPanel2.setLayout(new java.awt.GridLayout(2, 3));

        jLabel4.setText("Throttle:");
        jPanel2.add(jLabel4);

        tfTimingThrottleMin.setText("1000");
        tfTimingThrottleMin.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        tfTimingThrottleMin.setMinimumSize(new java.awt.Dimension(4, 25));
        tfTimingThrottleMin.setPreferredSize(new java.awt.Dimension(32, 25));
        tfTimingThrottleMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimingThrottleMinActionPerformed(evt);
            }
        });
        jPanel2.add(tfTimingThrottleMin);

        tfTimingThrottleMax.setText("2000");
        tfTimingThrottleMax.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        tfTimingThrottleMax.setMinimumSize(new java.awt.Dimension(4, 25));
        tfTimingThrottleMax.setPreferredSize(new java.awt.Dimension(32, 25));
        tfTimingThrottleMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimingThrottleMaxActionPerformed(evt);
            }
        });
        jPanel2.add(tfTimingThrottleMax);

        jLabel1.setText("Steering:");
        jPanel2.add(jLabel1);

        tfTimingSteeringMin.setText("1000");
        tfTimingSteeringMin.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        tfTimingSteeringMin.setMinimumSize(new java.awt.Dimension(4, 25));
        tfTimingSteeringMin.setPreferredSize(new java.awt.Dimension(32, 25));
        tfTimingSteeringMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimingSteeringMinActionPerformed(evt);
            }
        });
        jPanel2.add(tfTimingSteeringMin);

        tfTimingSteeringMax.setText("2000");
        tfTimingSteeringMax.setMaximumSize(new java.awt.Dimension(2147483647, 25));
        tfTimingSteeringMax.setMinimumSize(new java.awt.Dimension(4, 25));
        tfTimingSteeringMax.setPreferredSize(new java.awt.Dimension(32, 25));
        tfTimingSteeringMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTimingSteeringMaxActionPerformed(evt);
            }
        });
        jPanel2.add(tfTimingSteeringMax);

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfEpaThrottleMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEpaThrottleMinActionPerformed
        try {
			epaThrottleMin = parsePercent(tfEpaThrottleMin);
			mainFrame.setEpaThrottle(epaThrottleMin, epaThrottleMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfEpaThrottleMinActionPerformed

    private void tfEpaThrottleMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEpaThrottleMaxActionPerformed
		try {
			epaThrottleMax = parsePercent(tfEpaThrottleMax);
			mainFrame.setEpaThrottle(epaThrottleMin, epaThrottleMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfEpaThrottleMaxActionPerformed

    private void tfEpaSteeringMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEpaSteeringMinActionPerformed
        try {
			epaSteeringMin = parsePercent(tfEpaSteeringMin);
			mainFrame.setEpaSteering(epaSteeringMin, epaSteeringMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfEpaSteeringMinActionPerformed

    private void tfEpaSteeringMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfEpaSteeringMaxActionPerformed
        try {
			epaSteeringMax = parsePercent(tfEpaSteeringMax);
			mainFrame.setEpaSteering(epaSteeringMin, epaSteeringMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfEpaSteeringMaxActionPerformed

    private void tfTimingThrottleMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimingThrottleMinActionPerformed
		try {
			timingThrottleMin = Float.parseFloat(tfTimingThrottleMin.getText());
			mainFrame.setTimingThrottle(timingThrottleMin, timingThrottleMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfTimingThrottleMinActionPerformed

    private void tfTimingThrottleMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimingThrottleMaxActionPerformed
		try {
			timingThrottleMax = Float.parseFloat(tfTimingThrottleMax.getText());
			mainFrame.setTimingThrottle(timingThrottleMin, timingThrottleMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfTimingThrottleMaxActionPerformed

    private void tfTimingSteeringMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimingSteeringMinActionPerformed
		try {
			timingSteeringMin = Float.parseFloat(tfTimingSteeringMin.getText());
			mainFrame.setTimingSteering(timingSteeringMin, timingSteeringMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfTimingSteeringMinActionPerformed

    private void tfTimingSteeringMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTimingSteeringMaxActionPerformed
		try {
			timingSteeringMax = Float.parseFloat(tfTimingSteeringMax.getText());
			mainFrame.setTimingSteering(timingSteeringMin, timingSteeringMax);
		}
		catch (NumberFormatException e) {
			/* swallow */
		}
    }//GEN-LAST:event_tfTimingSteeringMaxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField tfEpaSteeringMax;
    private javax.swing.JTextField tfEpaSteeringMin;
    private javax.swing.JTextField tfEpaThrottleMax;
    private javax.swing.JTextField tfEpaThrottleMin;
    private javax.swing.JTextField tfTimingSteeringMax;
    private javax.swing.JTextField tfTimingSteeringMin;
    private javax.swing.JTextField tfTimingThrottleMax;
    private javax.swing.JTextField tfTimingThrottleMin;
    // End of variables declaration//GEN-END:variables
}
